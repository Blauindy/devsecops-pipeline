name: SonarCloud Analysis for Multiple Projects

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  java_analysis:
    name: Build and analyze Java projects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Make gradlew executable (Merger)
        working-directory: projects/Merge/pdfmerger
        run: chmod +x gradlew
        
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze Merger
        working-directory: projects/Merge/pdfmerger  # Zeile anpassen: tats채chlichen Pfad zum Java-Projekt 1 eingeben
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

      - name: Make gradlew executable (Splitter)
        working-directory: projects/Split/pdfsplitter
        run: chmod +x gradlew

      - name: Build and analyze Splitter
        working-directory: projects/Split/pdfsplitter  # Zeile anpassen: tats채chlichen Pfad zum Java-Projekt 2 eingeben
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

#  dotnet_analysis:
#    name: Build and analyze .NET project
 #   runs-on: ubuntu-latest
#    steps:
 #     - uses: actions/checkout@v4
#        with:
 #         fetch-depth: 0

 #     - name: Set up .NET
 #       uses: actions/setup-dotnet@v2
 #       with:
 #         dotnet-version: '6.x'

 #     - name: Build and analyze .NET project
 #       working-directory: projects/dotnet_project  # Zeile anpassen: tats채chlichen Pfad zum .NET-Projekt eingeben
 #       env:
 #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 #       run: |
#          dotnet-sonarscanner begin /k:"mein-sonarcloud-projekt-key" /o:"meine-organisation" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
 #         dotnet build
 #         dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
 #         # Zeile anpassen: mein-sonarcloud-projekt-key und meine-organisation mit tats채chlichen Werten ersetzen
