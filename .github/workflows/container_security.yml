# .github/workflows/trivy-scan.yml
name: Docker Image Build and Security Scan

on:
  push:
    branches:
      - container_security
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Docker for building the image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build the Docker image
      #- name: Build Docker Image
      #  run: |
      #    docker build -t my-app:latest ./projects/Merge/pdfmerger
      #    docker build -t my-app:latest ./projects/Split/pdfsplitter

      # Pull the Trivy image
      #- name: Pull Trivy Scanner
      #  run: docker pull aquasec/trivy:latest

      - name: Scan Multiple Projects with Trivy
        run: |
          # Hier die Verzeichnisse der Projekte definieren
          projects=("projects/merge/pdfmerger" "projects/split/pdfsplitter")
          for project in "${projects[@]}"; do
            echo "Building and Scanning Docker Image for $project..."
            # Docker-Image für das jeweilige Projekt erstellen
            docker build -t "my-app:latest" "./$project"

            # Trivy-Scan für das Docker-Image des Projekts durchführen
            docker run \
              --rm \
              -v "$(realpath .):/opt/src" \
              -v /run/docker.sock:/var/run/docker.sock \
              -v /tmp/trivy-cache:/cache \
              -e "TRIVY_DB_REPOSITORY=public.ecr.aws/aquasecurity/trivy-db" \
              -e "TRIVY_JAVA_DB_REPOSITORY=public.ecr.aws/aquasecurity/trivy-java-db" \
              -w /opt/src \
              aquasec/trivy:0.56.2 --cache-dir /cache image --quiet "$project-image:latest"
          done

